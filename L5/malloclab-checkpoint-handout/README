#####################################################################
# CS:APP Malloc Lab
# Handout files for students
######################################################################

***********
Main Files:
***********

mm.c
	Your solution malloc package. This is the file that you
	will be handing in, and is the only file you should modify.

mm-orig.c
	Backup copy of the original mm.c file

mm-naive.c
        A solution that implements all the functions correctly, but
        quickly runs out of memory because it doesn't actually implement
        free().  Feel free to copy code out of here.

mm-implicit.c
        A working implicit list allocator from your textbook. Feel free
	to use any code from here.

mdriver.c	
	The malloc driver that tests your mm-student.c file

mdriver
        Once you've run make, run ./mdriver to test your solution.

traces/
	Directory that contains the trace files that the driver uses
	to test your solution. Files orners.rep, short2.rep, and malloc.rep
	are tiny trace files that you can use for debugging correctness.

**********************************
Other support files for the driver
**********************************

config.h	Configures the malloc lab driver
fsecs.{c,h}	Wrapper function for the different timer packages
clock.{c,h}	Routines for accessing the Pentium and Alpha cycle counters
fcyc.{c,h}	Timer functions based on cycle counters
ftimer.{c,h}	Timer functions based on interval timers and gettimeofday()
memlib.{c,h}	Models the heap and sbrk function

*******************************
Building and running the driver
*******************************
To build the driver, type "make" to the shell.

To run the driver on a tiny test trace:

	unix> ./mdriver -V -f traces/malloc.rep

To get a list of the driver flags:

	unix> ./mdriver -h

The -V option prints out helpful tracing information



